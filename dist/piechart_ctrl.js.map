{"version":3,"sources":["../src/piechart_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","rendering","legend","PieChartCtrl","$scope","$injector","$rootScope","panelDefaults","pieType","show","values","sort","sortDesc","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","legendType","aliasColors","format","valueName","strokeWidth","fontSize","combine","threshold","label","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","addEditorTab","unitFormats","getUnitFormats","subItem","value","render","series","color","alias","data","parseSeries","sortBy","serie","match","parseInt","stats","reverse","map","i","dataList","seriesHandler","n","length","colors","seriesData","datapoints","target","flotpairs","getFlotPairs","isNumber","decimals","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"piechart_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport _ from 'lodash';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport TimeSeries from 'app/core/time_series';\r\nimport rendering from './rendering';\r\nimport legend from './legend';\r\n\r\nexport class PieChartCtrl extends MetricsPanelCtrl {\r\n\r\n  constructor($scope, $injector, $rootScope) {\r\n    super($scope, $injector);\r\n    this.$rootScope = $rootScope;\r\n\r\n    var panelDefaults = {\r\n      pieType: 'pie',\r\n      legend: {\r\n        show: true, // disable/enable legend\r\n        values: true,\r\n        sort: 'series',\r\n        sortDesc: false\r\n      },\r\n      links: [],\r\n      datasource: null,\r\n      maxDataPoints: 3,\r\n      interval: null,\r\n      targets: [{}],\r\n      cacheTimeout: null,\r\n      nullPointMode: 'connected',\r\n      legendType: 'Under graph',\r\n      aliasColors: {},\r\n      format: 'short',\r\n      valueName: 'current',\r\n      strokeWidth: 1,\r\n      fontSize: '80%',\r\n\t  combine: {\r\n\t    threshold: 0.0,\r\n\t    label: 'Others'\r\n\t  }\r\n    };\r\n\r\n    _.defaults(this.panel, panelDefaults);\r\n    _.defaults(this.panel.legend, panelDefaults.legend);\r\n\r\n    this.events.on('render', this.onRender.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-error', this.onDataError.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Options', 'public/plugins/grafana-piechart-panel/editor.html', 2);\r\n    this.unitFormats = kbn.getUnitFormats();\r\n  }\r\n\r\n  setUnitFormat(subItem) {\r\n    this.panel.format = subItem.value;\r\n    this.render();\r\n  }\r\n\r\n  onDataError() {\r\n    this.series = [];\r\n    this.render();\r\n  }\r\n\r\n  changeSeriesColor(series, color) {\r\n    series.color = color;\r\n    this.panel.aliasColors[series.alias] = series.color;\r\n    this.render();\r\n  }\r\n\r\n  onRender() {\r\n    this.data = this.parseSeries(this.series);\r\n  }\r\n\r\n  parseSeries(series) {\r\n    if (this.panel.legend.sort) {\r\n      series = _.sortBy(series, (serie) => {\r\n        if (this.panel.legend.sort === 'series') {\r\n          var match = serie.alias.match(/\\d+/);\r\n          if (match) {\r\n            return parseInt(match[0]);\r\n          } else {\r\n            return -1;\r\n          }\r\n        } else {\r\n          return serie.stats[this.panel.legend.sort];\r\n        }\r\n      });\r\n      if (this.panel.legend.sortDesc) {\r\n        series = series.reverse();\r\n      }\r\n    }\r\n\r\n    return _.map(series, (serie, i) => {\r\n      return {\r\n        label: serie.alias,\r\n        data: serie.stats[this.panel.valueName],\r\n        color: serie.color\r\n      };\r\n    });\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n    this.series = dataList.map(this.seriesHandler.bind(this));\r\n    for (var i = 0, n = this.series.length; i < n; i++) {\r\n      this.series[i].color = this.panel.aliasColors[this.series[i].alias] || this.$rootScope.colors[i];\r\n    }\r\n    this.data = this.parseSeries(this.series);\r\n    this.render(this.data);\r\n  }\r\n\r\n  seriesHandler(seriesData) {\r\n    var series = new TimeSeries({\r\n      datapoints: seriesData.datapoints,\r\n      alias: seriesData.target\r\n    });\r\n\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    return series;\r\n  }\r\n\r\n  getDecimalsForValue(value) {\r\n    if (_.isNumber(this.panel.decimals)) {\r\n      return { decimals: this.panel.decimals, scaledDecimals: null };\r\n    }\r\n\r\n    var delta = value / 2;\r\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\r\n\r\n    var magn = Math.pow(10, -dec);\r\n    var norm = delta / magn; // norm is between 1.0 and 10.0\r\n    var size;\r\n\r\n    if (norm < 1.5) {\r\n      size = 1;\r\n    } else if (norm < 3) {\r\n      size = 2;\r\n      // special case for 2.5, requires an extra decimal\r\n      if (norm > 2.25) {\r\n        size = 2.5;\r\n        ++dec;\r\n      }\r\n    } else if (norm < 7.5) {\r\n      size = 5;\r\n    } else {\r\n      size = 10;\r\n    }\r\n\r\n    size *= magn;\r\n\r\n    // reduce starting decimals if not needed\r\n    if (Math.floor(value) === value) { dec = 0; }\r\n\r\n    var result = {};\r\n    result.decimals = Math.max(0, dec);\r\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\r\n\r\n    return result;\r\n  }\r\n\r\n  formatValue(value) {\r\n    var decimalInfo = this.getDecimalsForValue(value);\r\n    var formatFunc = kbn.valueFormats[this.panel.format];\r\n    if (formatFunc) {\r\n      return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    rendering(scope, elem, attrs, ctrl);\r\n  }\r\n}\r\n\r\nPieChartCtrl.templateUrl = 'module.html';\r\n"]}